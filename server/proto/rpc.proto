syntax = "proto3";
package game;

import public "common.proto";
import public "chess.proto";

service Game {
  rpc CreateGame (CreateGameRequest) returns (CreateGameReply);
  rpc MakeTurn (MakeTurnRequest) returns (MakeTurnReply);
  rpc GameSession (stream GameSessionRequest) returns (stream GameSessionReply);
  rpc DeleteGame (DeleteGameRequest) returns (DeleteGameReply);

  rpc GetGame (GetGameRequest) returns (GetGameReply);
  rpc GetPlayerGames (GetPlayerGamesRequest) returns (GetPlayerGamesReply);
}

message CreateGameRequest {
  GameType game_type = 1;
  // The first one is the one who initiates the call
  repeated uint64 player_ids = 2;
}

message CreateGameReply {
  GameInfo game_info = 1;
}

message MakeTurnRequest {
  GameType game_type = 1;
  uint64 game_id = 2;
  uint64 player_id = 3;
  bytes turn_data = 4;
}

message MakeTurnReply {
  GameState game_state = 1;
}

message GameSession {
  GameType game_type = 1;
  uint64 game_id = 2;
  uint64 player_id = 3;
}

message GameSessionRequest {
  oneof request {
    GameSession init = 1;
    bytes turn_data = 2;
  }
}

message GameSessionReply {
  uint32 player_position = 1;
  bytes turn_data = 2;
}

message DeleteGameRequest {
  GameType game_type = 1;
  uint64 game_id = 2;
}

message DeleteGameReply {

}

message GetGameRequest {
  GameType game_type = 1;
  uint64 game_id = 2;
}

message GetGameReply {
  GameInfo game_info = 1;
}

message GetPlayerGamesRequest {
  GameType game_type = 1;
  uint64 player_id = 2;
}

message GetPlayerGamesReply {
  repeated GameInfo games = 1;
}
